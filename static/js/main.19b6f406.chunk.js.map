{"version":3,"sources":["components/StepFlow.js","components/MultiStepForm.js","hooks/useFormStyles.js","form/StepOne.js","form/StepTwo.js","form/StepThree.js","form/FinalStep.js","App.js","index.js"],"names":["StepFlow","_ref","stepLabels","currentStep","react_default","a","createElement","Stepper_default","map","label","index","Step_default","key","completed","active","StepLabel_default","initialState","allStepsData","reducer","state","type","payload","currentStepData","newAllStepsData","equals","i","Object","objectSpread","MultiStepForm","_ref2","children","fieldData","showFlow","_useReducer","useReducer","_useReducer2","slicedToArray","formState","dispatch","handleNext","useCallback","handleBack","hanleSubmit","console","log","useMemo","child","props","currentStepComponent","Fragment","components_StepFlow","cloneElement","onNext","onBack","onSubmit","useFormStyles","makeStyles","form","width","height","display","flexDirection","fieldsArea","field","marginBottom","compondField","alignItems","justifyContent","helperText","textAlign","addButton","margin","buttonsArea","marginTop","gridContainer","form_StepOne","classes","meal","pathOr","numberOfPeople","meals","extractAvailableMeals","formik_esm","initialValues","validate","validator","values","errors","handleChange","className","TextField_default","id","name","select","value","onChange","fullWidth","error","MenuItem_default","Button_default","variant","color","data","reduce","acc","dish","union","availableMeals","isEmpty","StepTwo","restaurant","restaurants","extractRestaurantByMeal","onClick","filter","compose","includes","prop","form_StepThree","dishes","quantity","availableDishes","extractAvailableDishesByRestaurant","validateOnChange","_ref3","push","remove","concat","IconButton_default","Delete_default","fontSize","FormHelperText_default","Fab_default","Add_default","forEach","_ref4","length","countAllQuantity","_ref5","FinalStep","Grid_default","spacing","container","item","xs","Typography_default","align","gutterBottom","App","useStyles","_useState","useState","_useState2","setFieldData","fetchFormData","asyncToGenerator","regenerator_default","mark","_callee","_ref2$data","wrap","_context","prev","next","axios","get","sent","stop","this","apply","arguments","useEffect","styles","theme","root","Paper_default","formWrapper","components_MultiStepForm","form_StepTwo","form_FinalStep","createMuiTheme","palette","primary","main","typography","useNextVariants","background","border","minHeight","padding","ReactDOM","render","src_App","document","getElementById"],"mappings":"yUAeeA,EAVE,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,WAAYC,EAAfF,EAAeE,YAAf,OACfC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,KACGH,EAAWM,IAAI,SAACC,EAAOC,GAAR,OACdN,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAMO,IAAKH,EAAOI,UAAWH,EAAQ,EAAIP,EAAaW,OAAQJ,EAAQ,IAAMP,GAC1EC,EAAAC,EAAAC,cAACS,EAAAV,EAAD,KAAYI,QCLdO,EAAe,CACnBb,YAAa,EACbc,aAAc,IAGHC,EAAU,SAACC,EAADlB,GAA8B,IAApBmB,EAAoBnB,EAApBmB,KAAMC,EAAcpB,EAAdoB,QACrC,OAAQD,GACN,IAAK,OAAQ,IACHjB,EAA8BgB,EAA9BhB,YAAac,EAAiBE,EAAjBF,aACfK,EAAkBL,EAAad,IAAgB,GAEjDoB,EAAkB,GACtB,GAAKC,YAAOF,EAAiBD,GAK3BE,EAAkBN,OAJlB,IAAK,IAAIQ,EAAI,EAAGA,EAAItB,EAAasB,IAC/BF,EAAgBE,GAAKR,EAAaQ,GAOtC,OAFAF,EAAgBpB,GAAekB,EAExB,CACLJ,aAAcM,EACdpB,YAAaA,EAAc,GAG/B,IAAK,OACH,OAAOuB,OAAAC,EAAA,EAAAD,CAAA,GACFP,EADL,CAEEhB,YAAagB,EAAMhB,YAAc,IAErC,QACE,OAAOgB,IAgCES,EA5BO,SAAAC,GAAuC,IAApCC,EAAoCD,EAApCC,SAAUC,EAA0BF,EAA1BE,UAAWC,EAAeH,EAAfG,SAAeC,EAC7BC,qBAAWhB,EAASF,GADSmB,EAAAT,OAAAU,EAAA,EAAAV,CAAAO,EAAA,GACpDI,EADoDF,EAAA,GACzCG,EADyCH,EAAA,GAGrDI,EAAaC,sBAAY,SAAAnB,GAAO,OAAIiB,EAAS,CAAElB,KAAM,OAAQC,cAC7DoB,EAAaD,sBAAY,kBAAMF,EAAS,CAAElB,KAAM,WAChDsB,EAAcF,sBAAY,kBAAMG,QAAQC,IAAIP,KAE5CnC,EAAa2C,kBAAQ,kBAAMf,EAAStB,IAAI,SAAAsC,GAAK,OAAIA,EAAMC,MAAMtC,UAE3DN,EAA8BkC,EAA9BlC,YAAac,EAAiBoB,EAAjBpB,aACf+B,EAAuBlB,EAAS3B,EAAc,GAEpD,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4C,SAAA,KACGjB,GAAY5B,EAAAC,EAAAC,cAAC4C,EAAD,CAAU/C,YAAaA,EAAaD,WAAYA,IAC5DiD,uBAAaH,EAAsB,CAClCpC,IAAKoC,EAAqBD,MAAMtC,MAChC2C,OAAQb,EACRc,OAAQZ,EACRa,SAAUZ,EACVX,YACAd,eACAd,wGCtBOoD,EAtCOC,YAAW,CAC/BC,KAAM,CACJC,MAAO,OACPC,OAAQ,OACRC,QAAS,OACTC,cAAe,UAEjBC,WAAY,CACVF,QAAS,OACTC,cAAe,UAEjBE,MAAO,CACLC,aAAc,kBAEhBC,aAAc,CACZL,QAAS,OACTC,cAAe,MACfK,WAAY,aACZC,eAAgB,aAChBH,aAAc,IAEhBI,WAAY,CACVC,UAAW,oBAEbC,UAAW,CACTC,OAAQ,UAEVC,YAAa,CACXZ,QAAS,OACTC,cAAe,MACfM,eAAgB,gBAChBM,UAAW,IAEbC,cAAe,CACbD,UAAW,oBCgCfE,EA5DgB,SAAA1E,GAAsD,IAAnDmD,EAAmDnD,EAAnDmD,OAAQrB,EAA2C9B,EAA3C8B,UAAW5B,EAAgCF,EAAhCE,YAAac,EAAmBhB,EAAnBgB,aAC3C2D,EAAUrB,IAEVsB,EAAOC,YAAO,GAAI,CAAC3E,EAAa,QAAzB2E,CAAkC7D,GACzC8D,EAAiBD,YAAO,EAAG,CAAC3E,EAAa,kBAAxB2E,CAA2C7D,GAE5D+D,EAAQC,EAAsBlD,GAEpC,OACE3B,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAQC,cAAe,CAAEN,OAAME,kBAAkBzB,SAAUF,EAAQgC,SAAUC,GAC1E,SAAAxD,GAAsC,IAAnCyD,EAAmCzD,EAAnCyD,OAAQC,EAA2B1D,EAA3B0D,OAAQC,EAAmB3D,EAAnB2D,aAClB,OACEpF,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAMO,UAAWb,EAAQnB,MACvBrD,EAAAC,EAAAC,cAAA,OAAKmF,UAAWb,EAAQd,YACtB1D,EAAAC,EAAAC,cAACoF,EAAArF,EAAD,CACEoF,UAAWb,EAAQb,MACnB4B,GAAG,OACHC,KAAK,OACLnF,MAAM,OACNoF,QAAM,EACNC,MAAOR,EAAOT,KACdkB,SAAUP,EACVQ,WAAS,EACTC,QAASV,EAAOV,KAChBT,WAAYmB,EAAOV,MAAQ,KAE1BG,EAAMxE,IAAI,SAAAqE,GAAI,OACbzE,EAAAC,EAAAC,cAAC4F,EAAA7F,EAAD,CAAUO,IAAKiE,EAAMiB,MAAOjB,GACzBA,MAKPzE,EAAAC,EAAAC,cAACoF,EAAArF,EAAD,CACEoF,UAAWb,EAAQb,MACnB4B,GAAG,iBACHC,KAAK,iBACLnF,MAAM,mBACNW,KAAK,SACL0E,MAAOR,EAAOP,eACdgB,SAAUP,EACVQ,WAAS,EACTC,QAASV,EAAOR,eAChBX,WAAYmB,EAAOR,gBAAkB,OAIzC3E,EAAAC,EAAAC,cAAA,OAAKmF,UAAWb,EAAQJ,aACtBpE,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAC6F,EAAA9F,EAAD,CAAQuF,KAAK,OAAOxE,KAAK,SAASgF,QAAQ,YAAYC,MAAM,WAA5D,aAaDpB,EAAwB,SAAAqB,GAAI,OACvCA,EAAKC,OAAO,SAACC,EAAKC,GAAN,OAAeC,YAAMF,EAAKC,EAAKE,iBAAiB,KAEjDtB,EAAY,SAAAC,GACvB,IAAIC,EAAS,GAcb,OAZID,EAAOP,eAAiB,GAAKO,EAAOP,eAAiB,MACvDQ,EAAOR,eAAiB,wBAGtB6B,YAAQtB,EAAOP,kBACjBQ,EAAOR,eAAiB,YAGtB6B,YAAQtB,EAAOT,QACjBU,EAAOV,KAAO,YAGTU,8BChCMsB,EAhDC,SAAA5G,GAA8D,IAA3DmD,EAA2DnD,EAA3DmD,OAAQC,EAAmDpD,EAAnDoD,OAAQtB,EAA2C9B,EAA3C8B,UAAW5B,EAAgCF,EAAhCE,YAAac,EAAmBhB,EAAnBgB,aACnD2D,EAAUrB,IAEVsB,EAAOC,YAAO,GAAI,CAAC3E,EAAc,EAAG,QAA7B2E,CAAsC7D,GAC7C6F,EAAahC,YAAO,GAAI,CAAC3E,EAAa,cAAzB2E,CAAwC7D,GAErD8F,EAAcC,EAAwBnC,EAAxBmC,CAA8BjF,GAElD,OACE3B,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAQC,cAAe,CAAE2B,cAAcxD,SAAUF,EAAQgC,SAAUC,GAChE,SAAAxD,GAAsC,IAAnCyD,EAAmCzD,EAAnCyD,OAAQC,EAA2B1D,EAA3B0D,OAAQC,EAAmB3D,EAAnB2D,aAClB,OACEpF,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAMO,UAAWb,EAAQnB,MACvBrD,EAAAC,EAAAC,cAAA,OAAKmF,UAAWb,EAAQd,YACtB1D,EAAAC,EAAAC,cAACoF,EAAArF,EAAD,CACEoF,UAAWb,EAAQb,MACnB4B,GAAG,aACHC,KAAK,aACLnF,MAAM,aACNoF,QAAM,EACNC,MAAOR,EAAOwB,WACdf,SAAUP,EACVQ,WAAS,EACTC,QAASV,EAAOuB,WAChB1C,WAAYmB,EAAOuB,YAAc,KAEhCC,EAAYvG,IAAI,SAAAsG,GAAU,OACzB1G,EAAAC,EAAAC,cAAC4F,EAAA7F,EAAD,CAAUO,IAAKkG,EAAYhB,MAAOgB,GAC/BA,OAKT1G,EAAAC,EAAAC,cAAA,OAAKmF,UAAWb,EAAQJ,aACtBpE,EAAAC,EAAAC,cAAC6F,EAAA9F,EAAD,CAAQuF,KAAK,OAAOQ,QAAQ,YAAYa,QAAS5D,GAAjD,QAGAjD,EAAAC,EAAAC,cAAC6F,EAAA9F,EAAD,CAAQuF,KAAK,OAAOxE,KAAK,SAASgF,QAAQ,YAAYC,MAAM,WAA5D,aAaDW,EAA0B,SAAAnC,GAAI,OAAI,SAAAyB,GAAI,OACjDA,EACGY,OACCC,YACEC,YAASvC,GACTwC,YAAK,oBAGRd,OAAO,SAACC,EAAKC,GAAN,OAAeC,YAAMF,EAAK,CAACC,EAAKK,cAAc,MAE7CzB,EAAY,SAAAC,GACvB,IAAIC,EAAS,GAMb,OAJIqB,YAAQtB,EAAOwB,cACjBvB,EAAOuB,WAAa,YAGfvB,oGCmBT+B,GAjFkB,SAAArH,GAA8D,IAA3DmD,EAA2DnD,EAA3DmD,OAAQC,EAAmDpD,EAAnDoD,OAAQtB,EAA2C9B,EAA3C8B,UAAW5B,EAAgCF,EAAhCE,YAAac,EAAmBhB,EAAnBgB,aACrD2D,EAAUrB,IAEVwB,EAAiBD,YAAO,EAAG,CAAC,EAAG,kBAAdA,CAAiC7D,GAClD6F,EAAahC,YAAO,GAAI,CAAC3E,EAAc,EAAG,cAA7B2E,CAA4C7D,GACzDsG,EAASzC,YAAO,CAAC,CAAEc,KAAM,GAAI4B,SAAU,IAAM,CAACrH,EAAa,UAAlD2E,CAA6D7D,GAEtEwG,EAAkBC,GAAmCZ,EAAnCY,CAA+C3F,GAEvE,OACE3B,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAQC,cAAe,CAAEoC,UAAUjE,SAAUF,EAAQgC,SAAUC,GAAUN,IACtE,SAAAlD,GAAA,IAAGyD,EAAHzD,EAAGyD,OAAQC,EAAX1D,EAAW0D,OAAQC,EAAnB3D,EAAmB2D,aAAnB,OACCpF,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,KACE9E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAYO,UAAWb,EAAQd,WAAY8B,KAAK,SAAS+B,kBAAgB,GACtE,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAMC,EAATF,EAASE,OAAT,OACC1H,EAAAC,EAAAC,cAAA,WACGgF,EAAOiC,OAAO/G,IAAI,SAACiG,EAAM/F,GAAP,OACjBN,EAAAC,EAAAC,cAAA,OAAKmF,UAAWb,EAAQX,aAAcrD,IAAKF,GACzCN,EAAAC,EAAAC,cAACoF,EAAArF,EAAD,CACEsF,GAAE,UAAAoC,OAAYrH,EAAZ,UACFkF,KAAI,UAAAmC,OAAYrH,EAAZ,UACJD,MAAM,OACNoF,QAAM,EACNG,WAAS,EACTF,MAAOW,EAAKb,KACZG,SAAUP,EACVS,QAASnB,aAAO,EAAO,WAAAiD,OAAWrH,EAAX,WAAdoE,CAAyCS,GAClDnB,WAAYU,YAAO,IAAK,WAAAiD,OAAWrH,EAAX,WAAZoE,CAAuCS,IAElDkC,EAAgBjH,IAAI,SAAAiG,GAAI,OACvBrG,EAAAC,EAAAC,cAAC4F,EAAA7F,EAAD,CAAUO,IAAK6F,EAAMX,MAAOW,GACzBA,MAKPrG,EAAAC,EAAAC,cAACoF,EAAArF,EAAD,CACEsF,GAAE,UAAAoC,OAAYrH,EAAZ,cACFkF,KAAI,UAAAmC,OAAYrH,EAAZ,cACJD,MAAM,WACNW,KAAK,SACL4E,WAAS,EACTF,MAAOW,EAAKe,SACZzB,SAAUP,EACVS,QAASnB,aAAO,EAAO,WAAAiD,OAAWrH,EAAX,eAAdoE,CAA6CS,GACtDnB,WAAYU,YAAO,IAAK,WAAAiD,OAAWrH,EAAX,eAAZoE,CAA2CS,KAGzDnF,EAAAC,EAAAC,cAAC0H,EAAA3H,EAAD,CAAYuF,KAAK,cAAcqB,QAAS,kBAAMa,EAAOpH,KACnDN,EAAAC,EAAAC,cAAC2H,GAAA5H,EAAD,CAAY6H,SAAS,cAI3B9H,EAAAC,EAAAC,cAAC6H,GAAA9H,EAAD,CAAgBoF,UAAWb,EAAQR,WAAYgC,QAAQ,SAASH,OAAK,GAClEnB,YAAO,GAAI,CAAC,oBAAZA,CAAiCS,IAEpCnF,EAAAC,EAAAC,cAAC8H,EAAA/H,EAAD,CACEoF,UAAWb,EAAQN,UACnBsB,KAAK,WACLS,MAAM,UACNY,QAAS,kBAAMY,EAAK,CAAEjC,KAAM,GAAI4B,SAAU,MAE1CpH,EAAAC,EAAAC,cAAC+H,GAAAhI,EAAD,UAKRD,EAAAC,EAAAC,cAAA,OAAKmF,UAAWb,EAAQJ,aACtBpE,EAAAC,EAAAC,cAAC6F,EAAA9F,EAAD,CAAQuF,KAAK,OAAOQ,QAAQ,YAAYa,QAAS5D,GAAjD,QAGAjD,EAAAC,EAAAC,cAAC6F,EAAA9F,EAAD,CAAQuF,KAAK,OAAOxE,KAAK,SAASgF,QAAQ,YAAYC,MAAM,WAA5D,aAYCqB,GAAqC,SAAAZ,GAAU,OAAI,SAAAR,GAAI,OAClEA,EACGY,OAAO,SAAAT,GAAI,OAAIA,EAAKK,aAAeA,IACnCP,OAAO,SAACC,EAAKC,GAAN,OAAeC,YAAMF,EAAK,CAACC,EAAKb,QAAQ,MAEvCP,GAAY,SAAAN,GAAc,OAAI,SAAAO,GACzC,IAAIC,EAAS,GAEbD,EAAOiC,OAAOe,QAAQ,SAAC7B,EAAM/F,IACvB+F,EAAKe,SAAW,GAAKf,EAAKe,SAAW,MACvCjC,EAAM,UAAAwC,OAAWrH,EAAX,eAAgC,wBAGpCkG,YAAQH,EAAKe,YACfjC,EAAM,UAAAwC,OAAWrH,EAAX,eAAgC,YAGpB4E,EAAOiC,OAAOL,OAAO,SAAAqB,GAAA,OAAAA,EAAG3C,OAAoBa,EAAKb,OAAM4C,OACzD,IAChBjD,EAAM,UAAAwC,OAAWrH,EAAX,WAA4B,sBAGhCkG,YAAQH,EAAKb,QACfL,EAAM,UAAAwC,OAAWrH,EAAX,WAA4B,cAItC,IAAM+H,EAAmBnD,EAAOiC,OAAOhB,OAAO,SAACC,EAADkC,GAAA,OAAuBlC,EAAvBkC,EAAQlB,UAA+B,GAMrF,OALIzC,EAAiB0D,IACnBlD,EAAM,iBACJ,iFAGGA,4CCtDMoD,GApEG,SAAA1I,GAAwC,IAArCoD,EAAqCpD,EAArCoD,OAAQC,EAA6BrD,EAA7BqD,SAAUrC,EAAmBhB,EAAnBgB,aAC/B2D,EAAUrB,IAEVsB,EAAOC,YAAO,GAAI,CAAC,EAAG,QAAfA,CAAwB7D,GAC/B8D,EAAiBD,YAAO,GAAI,CAAC,EAAG,kBAAfA,CAAkC7D,GACnD6F,EAAahC,YAAO,GAAI,CAAC,EAAG,cAAfA,CAA8B7D,GAC3CsG,EAASzC,YAAO,GAAI,CAAC,EAAG,UAAfA,CAA0B7D,GAEzC,OACEb,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsI,GAAAvI,EAAD,CAAMoF,UAAWb,EAAQF,cAAemE,QAAS,GAAIC,WAAS,GAC5D1I,EAAAC,EAAAC,cAACsI,GAAAvI,EAAD,CAAM0I,MAAI,EAACC,GAAI,GACb5I,EAAAC,EAAAC,cAAC2I,GAAA5I,EAAD,CAAY+F,QAAQ,KAAK8C,MAAM,QAAQC,cAAY,GAAnD,SAIF/I,EAAAC,EAAAC,cAACsI,GAAAvI,EAAD,CAAM0I,MAAI,EAACC,GAAI,GACb5I,EAAAC,EAAAC,cAAC2I,GAAA5I,EAAD,CAAY+F,QAAQ,YAAY+C,cAAY,GACzCtE,IAGLzE,EAAAC,EAAAC,cAACsI,GAAAvI,EAAD,CAAM0I,MAAI,EAACC,GAAI,GACb5I,EAAAC,EAAAC,cAAC2I,GAAA5I,EAAD,CAAY+F,QAAQ,KAAK8C,MAAM,QAAQC,cAAY,GAAnD,qBAIF/I,EAAAC,EAAAC,cAACsI,GAAAvI,EAAD,CAAM0I,MAAI,EAACC,GAAI,GACb5I,EAAAC,EAAAC,cAAC2I,GAAA5I,EAAD,CAAY+F,QAAQ,YAAY+C,cAAY,GACzCpE,IAGL3E,EAAAC,EAAAC,cAACsI,GAAAvI,EAAD,CAAM0I,MAAI,EAACC,GAAI,GACb5I,EAAAC,EAAAC,cAAC2I,GAAA5I,EAAD,CAAY+F,QAAQ,KAAK8C,MAAM,QAAQC,cAAY,GAAnD,eAIF/I,EAAAC,EAAAC,cAACsI,GAAAvI,EAAD,CAAM0I,MAAI,EAACC,GAAI,GACb5I,EAAAC,EAAAC,cAAC2I,GAAA5I,EAAD,CAAY+F,QAAQ,YAAY+C,cAAY,GACzCrC,IAGL1G,EAAAC,EAAAC,cAACsI,GAAAvI,EAAD,CAAM0I,MAAI,EAACC,GAAI,GACb5I,EAAAC,EAAAC,cAAC2I,GAAA5I,EAAD,CAAY+F,QAAQ,KAAK8C,MAAM,QAAQC,cAAY,GAAnD,WAIF/I,EAAAC,EAAAC,cAACsI,GAAAvI,EAAD,CAAM0I,MAAI,EAACC,GAAI,GACb5I,EAAAC,EAAAC,cAAA,WACGiH,EAAO/G,IAAI,SAAAiG,GAAI,OACdrG,EAAAC,EAAAC,cAAC2I,GAAA5I,EAAD,CAAYO,IAAK6F,EAAKb,KAAMQ,QAAQ,YAAY+C,cAAY,GAA5D,GAAApB,OACMtB,EAAKb,KADX,OAAAmC,OACqBtB,EAAKe,gBAMlCpH,EAAAC,EAAAC,cAAA,OAAKmF,UAAWb,EAAQJ,aACtBpE,EAAAC,EAAAC,cAAC6F,EAAA9F,EAAD,CAAQuF,KAAK,OAAOQ,QAAQ,YAAYa,QAAS5D,GAAjD,QAGAjD,EAAAC,EAAAC,cAAC6F,EAAA9F,EAAD,CAAQuF,KAAK,SAASQ,QAAQ,YAAYC,MAAM,YAAYY,QAAS3D,GAArE,aCvBO8F,GA/BH,WACV,IAAMxE,EAAUyE,KADAC,EAEkBC,mBAAS,IAF3BC,EAAA9H,OAAAU,EAAA,EAAAV,CAAA4H,EAAA,GAETvH,EAFSyH,EAAA,GAEEC,EAFFD,EAAA,GAKVE,EAAa,eAAAzJ,EAAAyB,OAAAiI,EAAA,EAAAjI,CAAAkI,EAAAvJ,EAAAwJ,KAAG,SAAAC,IAAA,IAAAjI,EAAAkI,EAAAxC,EAAA,OAAAqC,EAAAvJ,EAAA2J,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACQC,IAAMC,IAAI,oBADlB,OAAAxI,EAAAoI,EAAAK,KAAAP,EAAAlI,EACZyE,KACAiB,QAFY,IAAAwC,EACL,GADKA,GAEZxC,OACRkC,EAAalC,GAHO,wBAAA0C,EAAAM,SAAAT,EAAAU,SAAH,yBAAAvK,EAAAwK,MAAAD,KAAAE,YAAA,GAUnB,OAJAC,oBAAU,WACRjB,KACC,IAGDtJ,EAAAC,EAAAC,cAACsK,EAAA,iBAAD,CAAkBC,MAAOA,IACvBzK,EAAAC,EAAAC,cAAA,OAAKmF,UAAWb,EAAQkG,MACtB1K,EAAAC,EAAAC,cAACyK,EAAA1K,EAAD,CAAOoF,UAAWb,EAAQoG,aACxB5K,EAAAC,EAAAC,cAAC2K,EAAD,CAAelJ,UAAWA,EAAWC,UAAQ,GAC3C5B,EAAAC,EAAAC,cAACqE,EAAD,CAASlE,MAAM,WACfL,EAAAC,EAAAC,cAAC4K,EAAD,CAASzK,MAAM,WACfL,EAAAC,EAAAC,cAACgH,GAAD,CAAW7G,MAAM,WACjBL,EAAAC,EAAAC,cAAC6K,GAAD,CAAW1K,MAAM,gBAUvBoK,GAAQO,yBAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,YAGVC,WAAY,CACVC,iBAAiB,KAIfpC,GAAY7F,YAAW,CAC3BsH,KAAM,CACJY,WAAY,mDACZC,OAAQ,EACRjI,MAAO,QACPC,OAAQ,OACRiI,UAAW,QACXhI,QAAS,OACTO,eAAgB,SAChBD,WAAY,UAEd8G,YAAa,CACXtH,MAAO,MACPC,OAAQ,OACRkI,QAAS,MCnEbC,IAASC,OAAO3L,EAAAC,EAAAC,cAAC0L,GAAD,MAASC,SAASC,eAAe","file":"static/js/main.19b6f406.chunk.js","sourcesContent":["import React from 'react';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\n\nconst StepFlow = ({ stepLabels, currentStep }) => (\n  <Stepper>\n    {stepLabels.map((label, index) => (\n      <Step key={label} completed={index + 1 < currentStep} active={index + 1 === currentStep}>\n        <StepLabel>{label}</StepLabel>\n      </Step>\n    ))}\n  </Stepper>\n);\n\nexport default StepFlow;\n","import React, { useReducer, useCallback, useMemo, cloneElement } from 'react';\nimport { equals } from 'ramda';\nimport StepFlow from './StepFlow';\n\nconst initialState = {\n  currentStep: 1,\n  allStepsData: {},\n};\n\nexport const reducer = (state, { type, payload }) => {\n  switch (type) {\n    case 'next': {\n      const { currentStep, allStepsData } = state;\n      const currentStepData = allStepsData[currentStep] || {};\n\n      let newAllStepsData = {};\n      if (!equals(currentStepData, payload)) {\n        for (let i = 1; i < currentStep; i++) {\n          newAllStepsData[i] = allStepsData[i];\n        }\n      } else {\n        newAllStepsData = allStepsData;\n      }\n      newAllStepsData[currentStep] = payload;\n\n      return {\n        allStepsData: newAllStepsData,\n        currentStep: currentStep + 1,\n      };\n    }\n    case 'back':\n      return {\n        ...state,\n        currentStep: state.currentStep - 1,\n      };\n    default:\n      return state;\n  }\n};\n\nconst MultiStepForm = ({ children, fieldData, showFlow }) => {\n  const [formState, dispatch] = useReducer(reducer, initialState);\n\n  const handleNext = useCallback(payload => dispatch({ type: 'next', payload }));\n  const handleBack = useCallback(() => dispatch({ type: 'back' }));\n  const hanleSubmit = useCallback(() => console.log(formState));\n\n  const stepLabels = useMemo(() => children.map(child => child.props.label));\n\n  const { currentStep, allStepsData } = formState;\n  const currentStepComponent = children[currentStep - 1];\n\n  return (\n    <>\n      {showFlow && <StepFlow currentStep={currentStep} stepLabels={stepLabels} />}\n      {cloneElement(currentStepComponent, {\n        key: currentStepComponent.props.label,\n        onNext: handleNext,\n        onBack: handleBack,\n        onSubmit: hanleSubmit,\n        fieldData,\n        allStepsData,\n        currentStep,\n      })}\n    </>\n  );\n};\n\nexport default MultiStepForm;\n","import { makeStyles } from '@material-ui/styles';\n\nconst useFormStyles = makeStyles({\n  form: {\n    width: '100%',\n    height: 'auto',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  fieldsArea: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  field: {\n    marginBottom: '20px!important',\n  },\n  compondField: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    marginBottom: 20,\n  },\n  helperText: {\n    textAlign: 'center!important',\n  },\n  addButton: {\n    margin: '20px 0',\n  },\n  buttonsArea: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 30,\n  },\n  gridContainer: {\n    marginTop: '20px!important',\n  },\n});\n\nexport default useFormStyles;\n","import React from 'react';\nimport { union, pathOr, isEmpty } from 'ramda';\nimport { Formik, Form } from 'formik';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport useFormStyles from '../hooks/useFormStyles';\n\nconst StepOne = ({ onNext, fieldData, currentStep, allStepsData }) => {\n  const classes = useFormStyles();\n\n  const meal = pathOr('', [currentStep, 'meal'])(allStepsData);\n  const numberOfPeople = pathOr(1, [currentStep, 'numberOfPeople'])(allStepsData);\n\n  const meals = extractAvailableMeals(fieldData);\n\n  return (\n    <Formik initialValues={{ meal, numberOfPeople }} onSubmit={onNext} validate={validator}>\n      {({ values, errors, handleChange }) => {\n        return (\n          <Form className={classes.form}>\n            <div className={classes.fieldsArea}>\n              <TextField\n                className={classes.field}\n                id=\"meal\"\n                name=\"meal\"\n                label=\"Meal\"\n                select\n                value={values.meal}\n                onChange={handleChange}\n                fullWidth\n                error={!!errors.meal}\n                helperText={errors.meal || ' '}\n              >\n                {meals.map(meal => (\n                  <MenuItem key={meal} value={meal}>\n                    {meal}\n                  </MenuItem>\n                ))}\n              </TextField>\n\n              <TextField\n                className={classes.field}\n                id=\"numberOfPeople\"\n                name=\"numberOfPeople\"\n                label=\"Number of people\"\n                type=\"number\"\n                value={values.numberOfPeople}\n                onChange={handleChange}\n                fullWidth\n                error={!!errors.numberOfPeople}\n                helperText={errors.numberOfPeople || ' '}\n              />\n            </div>\n\n            <div className={classes.buttonsArea}>\n              <div />\n              <Button name=\"next\" type=\"submit\" variant=\"contained\" color=\"primary\">\n                Next\n              </Button>\n            </div>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default StepOne;\n\nexport const extractAvailableMeals = data =>\n  data.reduce((acc, dish) => union(acc, dish.availableMeals), []);\n\nexport const validator = values => {\n  let errors = {};\n\n  if (values.numberOfPeople < 1 || values.numberOfPeople > 10) {\n    errors.numberOfPeople = 'Value between 1 ~ 10';\n  }\n\n  if (isEmpty(values.numberOfPeople)) {\n    errors.numberOfPeople = 'Required';\n  }\n\n  if (isEmpty(values.meal)) {\n    errors.meal = 'Required';\n  }\n\n  return errors;\n};\n","import React from 'react';\nimport { union, includes, prop, compose, pathOr, isEmpty } from 'ramda';\nimport { Formik, Form } from 'formik';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport useFormStyles from '../hooks/useFormStyles';\n\nconst StepTwo = ({ onNext, onBack, fieldData, currentStep, allStepsData }) => {\n  const classes = useFormStyles();\n\n  const meal = pathOr('', [currentStep - 1, 'meal'])(allStepsData);\n  const restaurant = pathOr('', [currentStep, 'restaurant'])(allStepsData);\n\n  const restaurants = extractRestaurantByMeal(meal)(fieldData);\n\n  return (\n    <Formik initialValues={{ restaurant }} onSubmit={onNext} validate={validator}>\n      {({ values, errors, handleChange }) => {\n        return (\n          <Form className={classes.form}>\n            <div className={classes.fieldsArea}>\n              <TextField\n                className={classes.field}\n                id=\"restaurant\"\n                name=\"restaurant\"\n                label=\"Restaurant\"\n                select\n                value={values.restaurant}\n                onChange={handleChange}\n                fullWidth\n                error={!!errors.restaurant}\n                helperText={errors.restaurant || ' '}\n              >\n                {restaurants.map(restaurant => (\n                  <MenuItem key={restaurant} value={restaurant}>\n                    {restaurant}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </div>\n            <div className={classes.buttonsArea}>\n              <Button name=\"back\" variant=\"contained\" onClick={onBack}>\n                Back\n              </Button>\n              <Button name=\"next\" type=\"submit\" variant=\"contained\" color=\"primary\">\n                Next\n              </Button>\n            </div>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default StepTwo;\n\nexport const extractRestaurantByMeal = meal => data =>\n  data\n    .filter(\n      compose(\n        includes(meal),\n        prop('availableMeals'),\n      ),\n    )\n    .reduce((acc, dish) => union(acc, [dish.restaurant]), []);\n\nexport const validator = values => {\n  let errors = {};\n\n  if (isEmpty(values.restaurant)) {\n    errors.restaurant = 'Required';\n  }\n\n  return errors;\n};\n","import React from 'react';\nimport { union, pathOr, isEmpty } from 'ramda';\nimport { Formik, Form, FieldArray } from 'formik';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport useFormStyles from '../hooks/useFormStyles';\n\nconst StepThree = ({ onNext, onBack, fieldData, currentStep, allStepsData }) => {\n  const classes = useFormStyles();\n\n  const numberOfPeople = pathOr(1, [1, 'numberOfPeople'])(allStepsData);\n  const restaurant = pathOr('', [currentStep - 1, 'restaurant'])(allStepsData);\n  const dishes = pathOr([{ name: '', quantity: 1 }], [currentStep, 'dishes'])(allStepsData);\n\n  const availableDishes = extractAvailableDishesByRestaurant(restaurant)(fieldData);\n\n  return (\n    <Formik initialValues={{ dishes }} onSubmit={onNext} validate={validator(numberOfPeople)}>\n      {({ values, errors, handleChange }) => (\n        <Form>\n          <FieldArray className={classes.fieldsArea} name=\"dishes\" validateOnChange>\n            {({ push, remove }) => (\n              <div>\n                {values.dishes.map((dish, index) => (\n                  <div className={classes.compondField} key={index}>\n                    <TextField\n                      id={`dishes[${index}].name`}\n                      name={`dishes[${index}].name`}\n                      label=\"Dish\"\n                      select\n                      fullWidth\n                      value={dish.name}\n                      onChange={handleChange}\n                      error={!!pathOr(false, [`dishes[${index}].name`])(errors)}\n                      helperText={pathOr(' ', [`dishes[${index}].name`])(errors)}\n                    >\n                      {availableDishes.map(dish => (\n                        <MenuItem key={dish} value={dish}>\n                          {dish}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n\n                    <TextField\n                      id={`dishes[${index}].quantity`}\n                      name={`dishes[${index}].quantity`}\n                      label=\"Quantity\"\n                      type=\"number\"\n                      fullWidth\n                      value={dish.quantity}\n                      onChange={handleChange}\n                      error={!!pathOr(false, [`dishes[${index}].quantity`])(errors)}\n                      helperText={pathOr(' ', [`dishes[${index}].quantity`])(errors)}\n                    />\n\n                    <IconButton name=\"remove-dish\" onClick={() => remove(index)}>\n                      <DeleteIcon fontSize=\"small\" />\n                    </IconButton>\n                  </div>\n                ))}\n                <FormHelperText className={classes.helperText} variant=\"filled\" error>\n                  {pathOr('', ['countAllQuantity'])(errors)}\n                </FormHelperText>\n                <Fab\n                  className={classes.addButton}\n                  name=\"add-dish\"\n                  color=\"primary\"\n                  onClick={() => push({ name: '', quantity: 1 })}\n                >\n                  <AddIcon />\n                </Fab>\n              </div>\n            )}\n          </FieldArray>\n          <div className={classes.buttonsArea}>\n            <Button name=\"back\" variant=\"contained\" onClick={onBack}>\n              Back\n            </Button>\n            <Button name=\"next\" type=\"submit\" variant=\"contained\" color=\"primary\">\n              Next\n            </Button>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default StepThree;\n\nexport const extractAvailableDishesByRestaurant = restaurant => data =>\n  data\n    .filter(dish => dish.restaurant === restaurant)\n    .reduce((acc, dish) => union(acc, [dish.name]), []);\n\nexport const validator = numberOfPeople => values => {\n  let errors = {};\n\n  values.dishes.forEach((dish, index) => {\n    if (dish.quantity < 1 || dish.quantity > 10) {\n      errors[`dishes[${index}].quantity`] = 'Value between 1 ~ 10';\n    }\n\n    if (isEmpty(dish.quantity)) {\n      errors[`dishes[${index}].quantity`] = 'Required';\n    }\n\n    const countByName = values.dishes.filter(({ name }) => name === dish.name).length;\n    if (countByName > 1) {\n      errors[`dishes[${index}].name`] = 'Cannot same dishes';\n    }\n\n    if (isEmpty(dish.name)) {\n      errors[`dishes[${index}].name`] = 'Required';\n    }\n  });\n\n  const countAllQuantity = values.dishes.reduce((acc, { quantity }) => acc + quantity, 0);\n  if (numberOfPeople > countAllQuantity) {\n    errors['countAllQuantity'] =\n      'The total number of dishes should be greater or equal to the number of person';\n  }\n\n  return errors;\n};\n","import React from 'react';\nimport { pathOr } from 'ramda';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport useFormStyles from '../hooks/useFormStyles';\n\nconst FinalStep = ({ onBack, onSubmit, allStepsData }) => {\n  const classes = useFormStyles();\n\n  const meal = pathOr('', [1, 'meal'])(allStepsData);\n  const numberOfPeople = pathOr('', [1, 'numberOfPeople'])(allStepsData);\n  const restaurant = pathOr('', [2, 'restaurant'])(allStepsData);\n  const dishes = pathOr([], [3, 'dishes'])(allStepsData);\n\n  return (\n    <div>\n      <Grid className={classes.gridContainer} spacing={24} container>\n        <Grid item xs={5}>\n          <Typography variant=\"h5\" align=\"right\" gutterBottom>\n            Meal\n          </Typography>\n        </Grid>\n        <Grid item xs={7}>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            {meal}\n          </Typography>\n        </Grid>\n        <Grid item xs={5}>\n          <Typography variant=\"h5\" align=\"right\" gutterBottom>\n            Number of people\n          </Typography>\n        </Grid>\n        <Grid item xs={7}>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            {numberOfPeople}\n          </Typography>\n        </Grid>\n        <Grid item xs={5}>\n          <Typography variant=\"h5\" align=\"right\" gutterBottom>\n            Restaurant\n          </Typography>\n        </Grid>\n        <Grid item xs={7}>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            {restaurant}\n          </Typography>\n        </Grid>\n        <Grid item xs={5}>\n          <Typography variant=\"h5\" align=\"right\" gutterBottom>\n            Dishes\n          </Typography>\n        </Grid>\n        <Grid item xs={7}>\n          <div>\n            {dishes.map(dish => (\n              <Typography key={dish.name} variant=\"subtitle1\" gutterBottom>\n                {`${dish.name} - ${dish.quantity}`}\n              </Typography>\n            ))}\n          </div>\n        </Grid>\n      </Grid>\n      <div className={classes.buttonsArea}>\n        <Button name=\"back\" variant=\"contained\" onClick={onBack}>\n          Back\n        </Button>\n        <Button name=\"submit\" variant=\"contained\" color=\"secondary\" onClick={onSubmit}>\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default FinalStep;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/styles';\nimport Paper from '@material-ui/core/Paper';\n\nimport MultiStepForm from './components/MultiStepForm';\nimport StepOne from './form/StepOne';\nimport StepTwo from './form/StepTwo';\nimport StepThree from './form/StepThree';\nimport FinalStep from './form/FinalStep';\n\nconst App = () => {\n  const classes = useStyles();\n  const [fieldData, setFieldData] = useState([]);\n\n  // Assume dishes data is from remote server\n  const fetchFormData = async () => {\n    const { data = {} } = await axios.get('data/dishes.json');\n    const { dishes } = data;\n    setFieldData(dishes);\n  };\n\n  useEffect(() => {\n    fetchFormData();\n  }, []);\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <Paper className={classes.formWrapper}>\n          <MultiStepForm fieldData={fieldData} showFlow>\n            <StepOne label=\"Step 1\" />\n            <StepTwo label=\"Step 2\" />\n            <StepThree label=\"Step 3\" />\n            <FinalStep label=\"Review\" />\n          </MultiStepForm>\n        </Paper>\n      </div>\n    </MuiThemeProvider>\n  );\n};\n\nexport default App;\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#2196f3',\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nconst useStyles = makeStyles({\n  root: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    width: '100vw',\n    height: 'auto',\n    minHeight: '100vh',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  formWrapper: {\n    width: '50%',\n    height: 'auto',\n    padding: 30,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}